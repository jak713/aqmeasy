name: Build Multi-Platform Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install CMake
        if: runner.os == "Windows"
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.22.x" 


      - name: Set Up Miniconda (Linux/Mac)
        if: runner.os != 'Windows'
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          channels: conda-forge


      - name: Install Conda Dependencies (Linux/Mac)
        if: runner.os != 'Windows'
        run: |
          eval "$(conda shell.bash hook)"
          conda create -y -n buildenv python=3.10 rdkit xtb crest aqme -c conda-forge
          conda activate buildenv


      - name: Set Up MSYS2 and Install Dependencies
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-gcc mingw-w64-x86_64-ninja git



      - name: Compile CREST from Source (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          git clone https://github.com/crest-lab/crest.git
          cd crest
          export FC=/mingw64/bin/gfortran && export CC=/mingw64/bin/gcc
          mkdir _build && cd _build
          cmake -G "Ninja" ..
          ninja


      - name: Add CREST Binary to PATH (Windows)
        if: runner.os == 'Windows'
        run: echo "$HOME/crest/_build" >> $GITHUB_PATH


      - name: Install Pip Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pyinstaller pyside6 pubchempy


      - name: Build Executable with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --windowed main.py


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-executable
          path: dist/
